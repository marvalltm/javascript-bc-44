/*
 * Example 0
 * –Ü–º–ø–µ—Ä–∞—Ç–∏–≤–Ω–∏–π —Ç–∞ –¥–µ–∫–ª–æ—Ä–∞—Ç–∏–≤–Ω–∏–π –∫–æ–¥
 * –Ü–º–ø - —Ü–µ –ø–æ—Å–ª—ñ–¥–æ–≤–Ω–µ –≤–∏–∫–æ–Ω–Ω–∞–Ω—è –¥—ñ–π. –¢–∞ —Å–ø—Ä–æ—â–µ–Ω–Ω—è –∫–æ–¥—É –¥–æ –±—ñ–ª—å—à —Ä–∞–Ω–Ω—ñ—Ö –≤–µ—Ä—Å—ñ–π.
 * –î–µ–∫ - —Ü–µ –æ–ø–∏—Å–∞–Ω–Ω—è –∑–∞–¥–∞—á —Ç–∞ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è —Å—É—á–∞—Å—Ç–Ω–æ–≥–æ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å—É —ñ –ø–∞—Ç—Ä–Ω—ñ–≤.
 * –Ü–¥–µ–∞–ª—É –Ω–µ —ñ—Å–Ω—É—î.
 */

/*
 * Example 1
 * –ö–æ–ª–±–µ–∫ —Ñ—É–Ω–∫—Ü—ñ—ó, —Ñ—É–Ω–∫—Ü—ñ—ó –≤–∏—â–æ–≥–æ –ø–æ—Ä—è–¥–∫—É
 */

//—Ñ—É–Ω–∫—Ü—ñ—è –≤–∏—â–æ–≥–æ –ø–æ—Ä—è–¥–∫—É
// const someHightOrderFunction = function (number, callback) {
//   if (number > 5) {
//     callback();
//   }
// };

// // callback —Ñ—É–Ω–∫—Ü—ñ—è
// const someCallbackFunction = function () {
//   console.log("Fine");
// };

// // // –∫–æ–ª–∏ –ø–µ—Ä–µ–¥–∞—î–º–æ callback, –Ω–∞–º –Ω–µ –ø–æ—Ç—Ä—ñ–±–Ω–æ –π–æ–≥–æ –≤–∏–∫–ª–∏–∫–∞—Ç–∏.
// someHightOrderFunction(56, someCallbackFunction);
// someHightOrderFunction(4, someCallbackFunction);
/**
 *  –ó–∞–ø–∏—Ç –Ω–∞ —Å–µ—Ä–≤–µ—Ä
 **/
// const fetchUser = async function (userUrl, callback) {
//   const response = await fetch(`https://api.github.com/users/${userUrl}`);
//   const result = await response.json();
//   //result - —Ü–µ –æ–±—å–µ–∫—Ç.

//   callback(result);
// };

// /**
//  * Shot to console.log info about user
//  * @param {Object} user
//  */
// const showInfoAboutUser = function (user) {
//   // –ø–æ–≤—ã–Ω–Ω–∞ –±—É—Ç–∏ –ª–æ–≥—ñ–∫–∞ –æ–ø—Ä–∞—Ü—é–≤–∞–Ω–Ω—è –Ω–∞—à–∏—Ö –¥–∞–Ω–Ω—ã—Ö
//   console.log(user);
// };

// const showUserID = function (user) {
//   console.log(user.id);
// };

// fetchUser("marvall", showInfoAboutUser);
// fetchUser("marvall", showUserID);

/**
 * –í–∏–∫–ª–∏–∫ –∫–∞–ª–±–µ–∫–∞ –ø–æ –µ–≤–µ–Ω—Ç—É –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω–∫—ñ
 * */
// const button = document.querySelector(".button");
// console.dir(button);

// const logValues = function (event) {
//   console.log(event);
// };

// button.addEventListener("click", logValues);

/**
 * –í–∏–∫–ª–∏–∫ –∫–∞–ª–±–µ–∫–∞ –ø–æ –µ–≤–µ–Ω—Ç—É —É setTimeout
 */

// const callback = function () {
//   console.log("hi");
// };

// setTimeout(callback, 2000);

// setTimeout(function () {
//   console.log("hi");
// }, 2000);

// console.log("sync function");

// setTimeout(() => {
//   console.log('hi');
// }, 3000);

/*
 * TASK 1
 * –ù–∞–ø–∏—à—ñ—Ç—å —Ñ—É–Ω–∫—Ü—ñ—é each(array, callback), –∫–æ—Ç—Ä–∞ –ø–µ—Ä—à–∏–º –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º –æ—á—ñ–∫—É—î –º–∞—Å–∏–≤,
 * –∞ –¥—Ä—É–≥–∏–º - —Ñ—É–Ω–∫—Ü—ñ—é, –∫–æ—Ç—Ä–∞ –≤–∏–∫–ª–∏–∫–∞—î—Ç—å—Å—è –¥–ª—è –∫–æ–∂–Ω–æ–≥–æ –µ–¥–µ–º–µ–Ω—Ç—É –º–∞—Å–∏–≤–∞.
 * –§—É–Ω–∫—Ü—ñ—è each –ø–æ–≤–∏–Ω–Ω–∞ –ø–æ–≤–µ—Ä–Ω—É—Ç–∏ –Ω–æ–≤–∏–π –º–∞—Å–∏–≤, –µ–ª–µ–º–µ–Ω—Ç–∞–º–∏ –∫–æ—Ç—Ä–æ–≥–æ –±—É–¥—É—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏ –≤–∏–∫–ª–∏–∫—É –∫–æ–ª–ª–±–µ–∫–∞.
 */

// const each = function (array, callback) {
//   const newArray = [];
//   for (const item of array) {
//     newArray.push(callback(item));
//   }
//   return newArray;
// };

// const multiplayTo2 = function (number) {
//   return number * 2;
// };

// const getNamesArray = function (user) {
//   return user.name;
// };

// const result = each([1, 2, 3, 4, 5, 6], multiplayTo2);

// const initArr = [
//   { name: "John", age: 10 },
//   { name: "James", age: 50 },
// ];

// const result2 = each(initArr, getNamesArray);

// console.log(result);
// console.log(result2);

/*
 * TASK 2
 * –ù–∞–ø–∏—à—ñ—Ç—å –Ω–∞—Å—Ç—É–ø–Ω—ñ —Ñ—É–Ω–∫—Ü—ñ—ó:
 * createProduct(product, callback) - –ø—Ä–∏–π–º–∞—î –æ–±'–µ–∫—Ç —Ç–æ–≤–∞—Ä–∞ –±–µ–∑ id,
 * –∞ —Ç–∞–∫–æ–∂ –∫–æ–ª–±–µ–∫. –§—É–Ω–∫—Ü—ñ—è —Å—Ç–≤–æ—Ä—é—î –æ–±'–µ–∫—Ç —Ç–æ–≤–∞—Ä–∞, –¥–æ–¥–∞—î –µ–º—É —É–Ω—ñ–∫–∞–ª—å–Ω–∏–π
 * id —Ç–∞ –≤–∏–∫–ª–∏–∫–∞—î –∫–æ–ª–±–µ–∫ –ø–µ—Ä–µ–¥–∞—î –π–æ–º—É –Ω–æ–≤–∏–π –æ–±'–µ–∫—Ç.
 * logProduct(product) - –∫–æ–ª–ª–±–µ–∫ –ø—Ä–∏–π–º–∞—î –æ–±'–µ–∫—Ç –ø—Ä–æ–¥—É–∫—Ç–∞ —Ç–∞ –ª–æ–≥—É—î –π–æ–≥–æ –≤ –∫–æ–Ω—Å–æ–ª—å
 * logTotalPrice(product) - –∫–æ–ª–ª–±–µ–∫ –ø—Ä–∏–π–º–∞—î –æ–±'–µ–∫—Ç –ø—Ä–æ–¥—É–∫—Ç–∞ —Ç–∞ –≤b–≤–æ–¥–∏—Ç—å –≤ –∫–æ–Ω—Å–æ–ª—å —Ü—ñ–Ω—É.
 */

// function createProduct(product, callback) {
//   const newProduct = {
//     id: Math.floor(Math.random() * 1000000).toString(36),
//     ...product,
//   };

//   callback(newProduct);
// }

// function logProduct(product) {
//   console.log(product);
// }

// function logTotalPrice(product) {
//   console.log(product.price);
// }

// createProduct({ name: "üçé", price: 30, quantity: 3 }, logProduct);
// createProduct({ name: "üçã", price: 20, quantity: 5 }, logTotalPrice);

/*
 * Example 2
 * –°—Ç—Ä—ñ–ª–∫–æ–≤—ñ —Ñ—É–Ω–∫—Ü—ñ—ó, —è–≤–Ω–µ - –Ω–µ—è–≤–Ω–µ –ø–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è, arguments, –ø–æ–≤—Ä–Ω–µ–Ω–Ω—è –æ–±'–µ–∫—Ç–∞.
 * –ö—Ä—É–≥–ª—ñ –¥—É–∂–∫–∏ –ø—ñ–¥—á–∞—Å –æ–≥–æ–ª–æ—à–Ω–Ω—è.
 * –ß–æ–º—É –Ω–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ —Å—Ç—Ä—ñ–ª–∫–æ–≤—ñ —Ñ—É–Ω–∫—Ü—ñ—ñ –≤ –º–µ—Ç–æ–¥–∞—Ö –æ–±'–µ–∫—Ç–∞
 */

// const some = (...args) => {
//   console.log(args);
// };

// console.log(some(10, 2, 3, 4, 56));

// const object = {
//   name: "Jhon",
//   sayHello() {
//     console.log(this);
//     console.log(`${this.name} say: Hello`);
//   },
// };

// object.sayHello();

/**
 * TASK 3
 * –ü–µ—Ä–µ–ø–∏—Å–∞—Ç—å TASK 1 –Ω–∞ —Å—Ç—Ä—ñ–ª–∫–æ–≤—ñ —Ñ—É–Ω–∫—Ü—ñ—ó
 */

// const each = (array, callback) => {
//   const newArray = [];

//   for (const value of array) {
//     newArray.push(callback(value));
//   }

//   return newArray;
// };

// const multiplayTo2 = (number) => number * 2;
// const getNamesArray = (user) => user.name;

// const result = each([1, 2, 3, 4, 5, 6], multiplayTo2);

// const initArr = [
//   { name: "John", age: 10 },
//   { name: "James", age: 50 },
// ];

// const result2 = each(initArr, getNamesArray);

// console.log(result);
// console.log(result2);

/**
 * TASK 4
 * –ü–µ—Ä–µ–ø–∏—Å–∞—Ç—å TASK 2 –Ω–∞ —Å—Ç—Ä—ñ–ª–∫–æ–≤—ñ —Ñ—É–Ω–∫—Ü—ñ—ó
 */

// const createProduct = (product, callback) => {
//   const newProduct = {
//     id: Date.now(),
//     ...product,
//   };

//   callback(newProduct);
// };

// const createProduct = (product, callback) =>
//   callback({ id: Date.now(), ...product });

// const logProduct = (product) => console.log(product);
// const logTotalPrice = (product) => console.log(product.price);

// createProduct({ name: "üçé", price: 30, quantity: 3 }, logProduct);
// createProduct({ name: "üçã", price: 20, quantity: 5 }, logTotalPrice);

// createProduct({ name: "üçé", price: 30, quantity: 3 }, logTotalPrice);
// createProduct({ name: "üçã", price: 20, quantity: 5 }, logTotalPrice);

/*
 * Exapmle 3
 * forEach() –∫–∞–∫ –∑–∞–º–µ–Ω–∞ —Ü–∏–∫–ª–æ–≤ for –∏ for...of –¥–ª—è –º–∞—Å—Å–∏–≤–æ–≤
 */

// const numbers = [{ num: 1 }, { num: 2 }];

// const callback = (element, index, array) => {
//   element.num *= 2;
//   console.group();
//   console.log("element: ", element);
//   console.log("index: ", index);
//   console.log("array: ", array);
//   console.groupEnd();
// };

// const ss = numbers.forEach(callback);
// console.log(numbers);

// ==========================================================================
// ==========================================================================

// numbers.forEach((item) => {
//   console.log(item);
// });

// numbers.forEach(callback);

// numbers.forEach((el, idx, arr) => console.log(el));

// const ownForEach = function (array, callback) {
//   for (let i = 0; i < array.length; i += 1) {
//     callback(array[i], i, array);
//   }
// };

// ownForEach(numbers, (el, idx, arr) => {
//   console.log(el);
// });

// const numbers = [1, 2, 3, 4, 5];

// const getTotal = function (numbersArr) {
//   let total = 0;

//   // –ß–µ—Ä–µ–∑ –æ–±—ã—á–Ω—ã–π for
//   //   for (let i = 0; i < numbersArr.length; i += 1) {
//   //     total += numbersArr[i];
//   //   }

//   // –ß–µ—Ä–µ–∑ –æ–±—ã—á–Ω—ã–π for...of
//   for (const num of numbersArr) {
//     total += num;
//   }

//   // –ß–µ—Ä–µ–∑ forEach();
//   numbersArr.forEach(el => (total += el));

//   return total;
// };

// console.log(getTotal(numbers));

/*
 * —î —Ñ—É–Ω–∫—Ü—ñ—è, –∑—Ä–æ–±–∏—Ç–∏ —Ä–µ—Ñ–∞–∫—Ç–æ—Ä—ñ–≥, –ø–µ—Ä–µ–ø–∏—Å–∞—Ç–∏ —ó—ó –Ω–∞ forEach.
 */

// function logItems(items) {
//   console.log(items);

//   for (let i = 0; i < items.length; i += 1) {
//     console.log(`${i + 1} - ${items[i]}`);
//   }
// }

// const logItems = items =>
//   items.forEach((item, index) => console.log(`${index + 1} - ${item}`));

// const logItems = items => {
//   items.forEach((item, index) => {
//     console.log(`${index + 1} - ${item}`);
//   });
// };

// logItems(['Mango', 'Poly', 'Ajax']);
// logItems(['üçé', 'üçá', 'üçë', 'üçå', 'üçã']);

/*
 * —î —Ñ—É–Ω–∫—Ü—ñ—è, –∑—Ä–æ–±–∏—Ç–∏ —Ä–µ—Ñ–∞–∫—Ç–æ—Ä—ñ–≥, –ø–µ—Ä–µ–ø–∏—Å–∞—Ç–∏ —ó—ó –Ω–∞ forEach —Ç–∞ —Å—Ç—Ä—ñ–ª–∫–æ–≤—ñ —Ñ—É–Ω–∫—Ü—ñ—ó.
 */

// function printContactsInfo({ names, phones } = {}) {
//   const nameList = names ? names.split(',') : [];
//   const phoneList = phones ? phones.split(',') : [];

//   for (let i = 0; i < nameList.length; i += 1) {
//     console.log(`${nameList[i]}: ${phoneList[i]}`);
//   }
// }

// const printContactsInfo = ({ names, phones } = {}) => {
//   const nameList = names ? names.split(',') : [];
//   const phoneList = phones ? phones.split(',') : [];

//   nameList.forEach((name, index) => {
//     console.log(`${name}: ${phoneList[index]}`);
//   });
// };

// printContactsInfo({
//   names: 'Jacob,William,Solomon,Artemis',
//   phones: '89001234567,89001112233,890055566377,890055566300',
// });

/*
 * —î —Ñ—É–Ω–∫—Ü—ñ—è, –∑—Ä–æ–±–∏—Ç–∏ —Ä–µ—Ñ–∞–∫—Ç–æ—Ä—ñ–≥, –ø–µ—Ä–µ–ø–∏—Å–∞—Ç–∏ —ó—ó –Ω–∞ forEach.
 */

// function cal—ÅulateAverage(...args) {
//   let total = 0;

//   for (let i = 0; i < args.length; i++) {
//     total += args[i];
//   }

//   return total / args.length;
// }

// const cal—ÅulateAverage = (...numbers) => {
//   let total = 0;

//   numbers.forEach(number => (total += number));

//   return total / numbers.length;
// };

// console.log(cal—ÅulateAverage(1, 2, 3, 4)); // 2.5
// console.log(cal—ÅulateAverage(14, 8, 2)); // 8
// console.log(cal—ÅulateAverage(27, 43, 2, 8, 36)); // 23.2
